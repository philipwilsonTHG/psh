name: Test Migration CI

on:
  push:
    branches: [ main, test-reorganization ]
  pull_request:
    branches: [ main ]

jobs:
  legacy-tests:
    name: Legacy Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-timeout
        
    - name: Run legacy tests
      run: |
        pytest tests/ --cov=psh --cov-report=xml --cov-report=term
        
    - name: Upload legacy coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: legacy-tests
        
  new-tests:
    name: New Test Suite  
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-timeout pexpect
        
    - name: Run new tests
      run: |
        pytest tests_new/ --cov=psh --cov-report=xml --cov-report=term
      continue-on-error: true  # Don't fail build while migrating
      
    - name: Upload new coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: new-tests
        
  conformance-tests:
    name: Conformance Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        sudo apt-get update
        sudo apt-get install -y bash
        
    - name: Run conformance tests
      run: |
        cd conformance_tests
        python run_conformance_tests.py --mode posix --bash-compare
        
  test-analysis:
    name: Test Suite Analysis
    runs-on: ubuntu-latest
    needs: [legacy-tests, new-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Analyze test suites
      run: |
        python tools/analyze_tests.py --test-dir tests --output-json legacy-analysis.json
        python tools/analyze_tests.py --test-dir tests_new --output-json new-analysis.json || true
        
    - name: Compare test coverage
      run: |
        echo "## Test Migration Progress" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Legacy Tests" >> $GITHUB_STEP_SUMMARY
        python -c "
        import json
        with open('legacy-analysis.json') as f:
            data = json.load(f)
            print(f\"- Total files: {data['summary']['total_test_files']}\")
            print(f\"- Total tests: {data['summary']['total_test_methods']}\")
        " >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### New Tests" >> $GITHUB_STEP_SUMMARY
        if [ -f new-analysis.json ]; then
          python -c "
          import json
          with open('new-analysis.json') as f:
              data = json.load(f)
              print(f\"- Total files: {data['summary']['total_test_files']}\")
              print(f\"- Total tests: {data['summary']['total_test_methods']}\")
          " >> $GITHUB_STEP_SUMMARY
        else
          echo "- Analysis pending" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload analysis artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-analysis
        path: |
          legacy-analysis.json
          new-analysis.json