# Test function definition and basic functionality
# PSH supports both POSIX and bash function syntax (v0.8.0 feature)

# Test POSIX function syntax
greet() {
    echo "Hello, $1!"
}

# Test bash function syntax  
function farewell {
    echo "Goodbye, $1!"
}

# Test function with multiple parameters
add_numbers() {
    local a="$1"
    local b="$2"
    echo $((a + b))
}

# Test function calls
echo "Testing function calls:"
greet "World"
farewell "Friend"

result=$(add_numbers 5 3)
echo "5 + 3 = $result"

# Test function with no parameters
get_message() {
    echo "Function with no parameters called"
}

get_message

# Test function redefinition
test_func() {
    echo "First definition"
}

test_func

test_func() {
    echo "Second definition"
}

test_func

# Test function with complex body
process_list() {
    echo "Processing list: $*"
    for item in "$@"; do
        if [ "$item" = "skip" ]; then
            continue
        fi
        echo "  Item: $item"
    done
}

process_list apple skip banana cherry

# Test function with return value
check_positive() {
    if [ "$1" -gt 0 ]; then
        return 0
    else
        return 1
    fi
}

if check_positive 5; then
    echo "5 is positive"
fi

if check_positive -3; then
    echo "This should not print"
else
    echo "-3 is not positive"
fi