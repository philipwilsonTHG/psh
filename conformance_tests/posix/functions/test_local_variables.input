# Test local variable scoping
# PSH supports local variables in functions (v0.29.0 feature)

# Set global variables
global_var="global_value"
shared_var="original"

# Test basic local variable
test_local_basic() {
    local local_var="local_value"
    echo "Inside function - local_var: $local_var"
    echo "Inside function - global_var: $global_var"
}

echo "Before function call:"
echo "global_var: $global_var"
echo "local_var: $local_var"

test_local_basic

echo "After function call:"
echo "global_var: $global_var"
echo "local_var: $local_var"

# Test local variable shadowing global
test_local_shadow() {
    local global_var="shadowed_value"
    echo "Inside function - global_var: $global_var"
    echo "Inside function - shared_var: $shared_var"
}

echo "Before shadow test:"
echo "global_var: $global_var"

test_local_shadow

echo "After shadow test:"
echo "global_var: $global_var"

# Test local variable with assignment
test_local_assignment() {
    local temp_var="temp"
    local shared_var="function_local"
    echo "Function local shared_var: $shared_var"
    
    # Modify global without local
    global_var="modified_global"
    echo "Modified global_var: $global_var"
}

echo "Before assignment test:"
echo "shared_var: $shared_var"

test_local_assignment

echo "After assignment test:"
echo "shared_var: $shared_var"
echo "global_var: $global_var"

# Test local with multiple assignments
test_multiple_locals() {
    local var1="value1" var2="value2" var3="value3"
    echo "var1: $var1, var2: $var2, var3: $var3"
}

test_multiple_locals

# Test nested function calls with locals
outer_function() {
    local outer_var="outer"
    echo "Outer function - outer_var: $outer_var"
    
    inner_function() {
        local inner_var="inner"
        local outer_var="inner_shadow"
        echo "Inner function - inner_var: $inner_var"
        echo "Inner function - outer_var: $outer_var"
    }
    
    inner_function
    echo "Back in outer - outer_var: $outer_var"
}

outer_function