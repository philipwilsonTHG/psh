# Test quote handling and escaping
# PSH supports comprehensive quote handling with proper escaping

# Test single quotes (literal)
echo "Testing single quotes:"
echo 'hello world'
echo 'Variables like $HOME are literal'
echo 'Special chars: * ? [ ] { }'
echo 'Quotes inside: "double" and `backticks`'

# Test double quotes (expansions allowed)
echo "Testing double quotes:"
echo "hello world"
echo "Variable expansion: $HOME"
echo "Command substitution: $(echo test)"
echo "Arithmetic: $((2 + 2))"

# Test mixing quotes
echo "Testing mixed quotes:"
echo "Single inside double: 'test'"
echo 'Double inside single: "test"'
echo "Mix: 'single' and $(echo 'test')"

# Test backslash escaping
echo "Testing backslash escaping:"
echo \$HOME
echo \"quoted\"
echo \'single\'
echo \\backslash
echo \*glob\*

# Test escaping in double quotes
echo "Testing escaping in double quotes:"
echo "Escaped dollar: \$HOME"
echo "Escaped quote: \"test\""
echo "Escaped backslash: \\"
echo "Escaped backtick: \`command\`"

# Test escaping special characters
echo "Testing special character escaping:"
echo \; semicolon
echo \& ampersand
echo \| pipe
echo \< redirect
echo \> redirect

# Test newline handling in quotes
echo "Testing newlines in quotes:"
echo "Line 1 and Line 2"
echo 'Line 1 and Line 2'

# Test empty quotes
echo "Testing empty quotes:"
echo ""
echo ''
echo "Empty: '' and \"\""

# Test quotes with spaces
echo "Testing quotes with spaces:"
echo "hello   world"
echo 'hello   world'
var="spaced   value"
echo "$var"

# Test quotes in variable assignments
echo "Testing quotes in assignments:"
single_var='single quoted value'
double_var="double quoted value"
echo "Single: $single_var"
echo "Double: $double_var"

# Test quotes in command substitution
echo "Testing quotes in command substitution:"
result=$(echo "quoted in command sub")
echo "Result: $result"
result2=$(echo 'single in command sub')
echo "Result2: $result2"

# Test quotes with glob patterns
echo "Testing quotes with glob patterns:"
mkdir -p tmp/quote_test
cd tmp/quote_test
touch "file with spaces.txt"
touch normal_file.txt

echo "Quoted glob: '*.txt'"
echo "Unquoted glob: *.txt"
echo "Mixed: 'file'*.txt"

# Test quotes in conditionals
echo "Testing quotes in conditionals:"
if [ "test" = "test" ]; then
    echo "Quoted equality works"
fi

if [ 'single' = 'single' ]; then
    echo "Single quoted equality works"
fi

# Test quotes with arrays (if supported)
echo "Testing quotes with word splitting:"
words="one two three"
echo "Quoted: \"$words\""
echo "Unquoted: $words"

# Test concatenation with quotes
echo "Testing quote concatenation:"
echo "hello"" world"
echo 'hello'' world'
echo "hello"' world'

# Test quotes in here documents
echo "Testing quotes in here documents:"
cat << 'EOF'
This is literal: $HOME
No expansion here
EOF

cat << "EOF"
This expands: $HOME
Variables work here
EOF

# Test escape sequences in quotes
echo "Testing escape sequences:"
echo "Tab:\tNewline:\n"
echo 'Tab:\tNewline:\n'

# Cleanup
cd ../..
rm -rf tmp/quote_test