# Test glob pattern matching and wildcards
# PSH supports comprehensive glob patterns with wildcards

# Setup test files
mkdir -p tmp/glob_test
cd tmp/glob_test
touch file1.txt file2.txt file3.log
touch abc.txt def.txt xyz.log
touch test_a test_b test_c
mkdir subdir1 subdir2
touch subdir1/nested.txt subdir2/nested.log

# Test basic wildcard *
echo "Testing * wildcard:"
echo file*.txt
echo *.log
echo test_*

# Test single character wildcard ?
echo "Testing ? wildcard:"
echo file?.txt
echo ???.txt
echo test_?

# Test character classes [...]
echo "Testing character classes:"
echo file[123].txt
echo file[1-3].txt
echo [ad]*.txt

# Test negated character classes [!...]
echo "Testing negated character classes:"
echo file[!2].txt
echo [!x]*.txt

# Test character ranges
echo "Testing character ranges:"
echo file[1-2].txt
echo [a-d]*.txt

# Test mixed patterns
echo "Testing mixed patterns:"
echo *[13].*
echo file[12].???

# Test patterns with no matches
echo "Testing no matches:"
echo *.xyz 2>/dev/null || echo "No .xyz files"
echo file[456].txt 2>/dev/null || echo "No file[456].txt"

# Test patterns in different contexts
echo "Testing patterns in for loops:"
for file in *.txt; do
    if [ -f "$file" ]; then
        echo "Found: $file"
    fi
done

# Test patterns with command substitution
echo "Testing patterns with command substitution:"
echo "Files: $(echo *.log)"

# Test case-sensitive patterns
echo "Testing case sensitivity:"
touch File1.TXT FILE2.TXT
echo file*.txt
echo File*.TXT
echo [Ff]ile*.???

# Test dot files (hidden files)
touch .hidden1 .hidden2
echo "Testing dot files:"
echo .*hidden*

# Test directory patterns
echo "Testing directory patterns:"
echo sub*/
echo */nested.*

# Cleanup and return
cd ../..
rm -rf tmp/glob_test