Testing advanced loop constructs:
Testing C-style for loops:
C-style loop: 1
C-style loop: 2
C-style loop: 3
Complex C-style: 2
Complex C-style: 4
Complex C-style: 6
Infinite loop broken
Testing advanced while loops:
Arithmetic while: 1
Arithmetic while: 2
Arithmetic while: 3
Command while: 1
Command while: 2
Function while: 1
Function while: 2
Testing advanced for loops:
Command sub for: one
Command sub for: two
Command sub for: three
Glob for: file2.txt
Glob for: file1.txt
Brace for:
Sequence for: 1
Sequence for: 2
Sequence for: 3
Sequence for: 4
Sequence for: 5
Testing nested mixed loops:
Outer C-style: 1
  Inner for: a
  Inner for: b
Outer C-style: 2
  Inner for: a
  Inner for: b
Outer for: X
  Inner while: 1
  Inner while: 2
Outer for: Y
  Inner while: 1
  Inner while: 2
Testing break/continue in nested loops:
Outer: 1
  Continuing inner loop
  Inner: b
  Inner: c
Outer: 2
  Inner: a
  Breaking inner loop
Outer: 3
  Inner: a
  Inner: b
  Inner: c
Testing loops with I/O redirection:
Loop output written to file:
Number: 1
Number: 2
Number: 3
Testing loops with functions:
Processing: apple
Processing: banana
Processing: cherry
Testing loops with arithmetic:
Factorial of 5: 120
Sum 1-10: 55
Testing loops with conditionals:
1 is odd
2 is even
3 is divisible by 3
4 is even
5 is odd
Testing variable modifications in loops:
Processed items: processed_items
Testing error handling in loops:
Command true succeeded
Command false failed
test
Command echo succeeded
Testing controlled infinite loops:
Infinite loop iteration: 1
Infinite loop iteration: 2
Infinite loop iteration: 3
Testing loop performance:
100 iterations completed successfully
Advanced loop constructs test completed
