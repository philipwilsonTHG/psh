# Test indexed array support
# PSH supports modern bash-style indexed arrays

echo "Testing indexed arrays:"

# Test basic array assignment and access
echo "Testing basic array operations:"
arr[0]="first"
arr[1]="second"
arr[2]="third"

echo "arr[0]: ${arr[0]}"
echo "arr[1]: ${arr[1]}"
echo "arr[2]: ${arr[2]}"

# Test array initialization with parentheses syntax
echo "Testing array initialization:"
colors=(red green blue yellow)
echo "colors[0]: ${colors[0]}"
echo "colors[1]: ${colors[1]}"
echo "colors[2]: ${colors[2]}"
echo "colors[3]: ${colors[3]}"

# Test accessing all array elements
echo "Testing array expansion:"
echo "All colors with \${colors[@]}: ${colors[@]}"
echo "All colors with \${colors[*]}: ${colors[*]}"

# Test array length
echo "Testing array length:"
echo "Length of colors array: ${#colors[@]}"
echo "Length of arr array: ${#arr[@]}"

# Test sparse arrays
echo "Testing sparse arrays:"
sparse[1]="one"
sparse[5]="five"
sparse[10]="ten"

echo "sparse[1]: ${sparse[1]}"
echo "sparse[5]: ${sparse[5]}"
echo "sparse[10]: ${sparse[10]}"
echo "sparse[3] (unset): ${sparse[3]}"
echo "Sparse array length: ${#sparse[@]}"
echo "All sparse elements: ${sparse[@]}"

# Test array indices
echo "Testing array indices:"
echo "Indices of colors: ${!colors[@]}"
echo "Indices of sparse: ${!sparse[@]}"

# Test array assignment with gaps
echo "Testing array with gaps:"
gapped=(zero one two)
gapped[5]="five"
gapped[7]="seven"

echo "Gapped array: ${gapped[@]}"
echo "Gapped indices: ${!gapped[@]}"
echo "Gapped length: ${#gapped[@]}"

# Test array element assignment
echo "Testing element modification:"
fruits=(apple banana cherry)
echo "Original fruits: ${fruits[@]}"

fruits[1]="orange"
echo "After changing fruits[1]: ${fruits[@]}"

fruits[3]="grape"
echo "After adding fruits[3]: ${fruits[@]}"

# Test negative indices (if supported)
echo "Testing negative indices:"
numbers=(10 20 30 40 50)
echo "numbers array: ${numbers[@]}"
# Note: Bash supports ${array[-1]} for last element
echo "Last element (if supported): ${numbers[-1]}"

# Test array concatenation
echo "Testing array concatenation:"
first=(a b c)
second=(d e f)
combined=(${first[@]} ${second[@]})
echo "Combined array: ${combined[@]}"

# Test array copying
echo "Testing array copying:"
original=(one two three)
copy=(${original[@]})
echo "Original: ${original[@]}"
echo "Copy: ${copy[@]}"

# Modify copy to verify independence
copy[1]="modified"
echo "After modifying copy:"
echo "Original: ${original[@]}"
echo "Copy: ${copy[@]}"

# Test array with special characters
echo "Testing arrays with special characters:"
special=("hello world" "with spaces" "symbols!@#" "quotes\"inside")
echo "Special array: ${special[@]}"
echo "Element with spaces: ${special[0]}"
echo "Element with symbols: ${special[2]}"

# Test empty array elements
echo "Testing empty elements:"
with_empty=("first" "" "third" "")
echo "Array with empty elements: ${with_empty[@]}"
echo "Length: ${#with_empty[@]}"
echo "Second element (empty): [${with_empty[1]}]"
echo "Fourth element (empty): [${with_empty[3]}]"

# Test array in loops
echo "Testing array iteration:"
animals=(cat dog bird fish)

echo "Iterating with \${animals[@]}:"
for animal in "${animals[@]}"; do
    echo "  Animal: $animal"
done

echo "Iterating with indices:"
for i in "${!animals[@]}"; do
    echo "  animals[$i]: ${animals[$i]}"
done

# Test array bounds
echo "Testing array bounds:"
bounds=(a b c)
echo "Valid index [1]: ${bounds[1]}"
echo "Invalid index [10]: ${bounds[10]}"
echo "Negative index [-5]: ${bounds[-5]}"

# Test array arithmetic
echo "Testing array with arithmetic:"
math_array[0]=$((10 + 5))
math_array[1]=$((20 * 2))
math_array[2]=$((100 / 4))

echo "Math array: ${math_array[@]}"

# Test array with command substitution
echo "Testing array with command substitution:"
cmd_array[0]=$(echo "command output")
cmd_array[1]=$(echo "12:00")
cmd_array[2]=$(echo "n/src/psh")

echo "Command array: ${cmd_array[@]}"

# Test array variable expansion in assignment
echo "Testing variable expansion in arrays:"
prefix="item"
var_array=("${prefix}_1" "${prefix}_2" "${prefix}_3")
echo "Variable array: ${var_array[@]}"

# Test array clearing
echo "Testing array clearing:"
to_clear=(one two three)
echo "Before clearing: ${to_clear[@]}"
unset to_clear
echo "After unset: ${to_clear[@]}"
echo "Length after unset: ${#to_clear[@]}"

# Test clearing single elements
echo "Testing element removal:"
elements=(a b c d e)
echo "Before removing element: ${elements[@]}"
unset elements[2]
echo "After removing elements[2]: ${elements[@]}"
echo "Indices after removal: ${!elements[@]}"

# Test array in function
echo "Testing arrays in functions:"
test_array_func() {
    local local_array=("func_a" "func_b" "func_c")
    echo "Local array in function: ${local_array[@]}"
    
    # Modify global array
    global_array[0]="modified_by_function"
}

global_array=(original_a original_b original_c)
echo "Before function call: ${global_array[@]}"
test_array_func
echo "After function call: ${global_array[@]}"

echo "Indexed arrays test completed"