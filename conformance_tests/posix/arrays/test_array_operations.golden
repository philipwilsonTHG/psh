Testing advanced array operations:
Test arrays:
numbers: 10 20 30 40 50 60 70 80 90 100
words: hello world test array operations bash shell
mixed: apple 123 test_file.txt banana 456 config.yaml
Testing array slicing:
numbers slice [2:3]: 30 40 50
numbers slice [1:2]: 20 30
numbers slice [5:]: 60 70 80 90 100
words slice [0:3]: hello world test
words slice [3:]: array operations bash shell
Testing slicing with variables:
numbers[$start:$length] where start=2, length=4: 30 40 50 60
Testing element substring operations:
Element 0: hello_world_test
Element 0 slice [0:5]: hello
Element 0 slice [6:]: world_test
Element 1 slice [8:4]: long
Testing pattern substitution:
Original files: file1.txt file2.log file3.txt file4.doc file5.txt
Replace .txt with .bak:

Replace all 'file' with 'document':

Remove .txt extension:

Remove file prefix:

Testing pattern matching:
Original test array: apple.txt banana.log cherry.txt date.doc elderberry.txt
Files ending with .txt:
  apple.txt
  cherry.txt
  elderberry.txt
Files not ending with .txt:
  banana.log
  date.doc
Testing array concatenation:
Combined: 1 2 3 4 5 6
With prefix and suffix: 0 1 2 3 4 5 6 7 8
Testing array sorting concepts:
Unsorted: zebra apple banana cherry date
Sorted:
Testing array reversal:
Original: 1 2 3 4 5
Reversed:
Testing array deduplication:
With duplicates: apple banana apple cherry banana date
Unique elements:
Testing array search:
Array: apple application apply banana grape grapefruit
Elements containing 'app':

Testing array arithmetic:
Values: 10 20 30 40 50
Sum: 150
Count: 5, Average: 30
Maximum: 50
Testing arrays with complex elements:
Complex array: key=value name=John Doe age=30 city=New York
Parsing key-value pairs:
  key -> value
  name -> John Doe
  age -> 30
  city -> New York
Testing array intersection:
Array 1: apple banana cherry date
Array 2: banana date elderberry fig
Intersection: date
Testing array difference:
Array1 - Array2: apple cherry
Testing array transformation:
Lowercase: hello world test
Uppercase: HELLO WORLD TEST
Testing array splitting and joining:
CSV string: apple,banana,cherry,date
Split array:
Joined back:
Testing multi-dimensional array simulation:
Matrix [0,0]: a1
Matrix [0,1]: a2
Matrix [1,0]: b1
Matrix [1,1]: b2
Matrix representation:
  row1: x1 x2 x3
  row2: y1 y2 y3
Array operations test completed
