# Test control structures in pipelines
# PSH supports control structures as pipeline components (v0.37.0 feature)

# Test while loop in pipeline
echo -e "apple\nbanana\ncherry" | while read fruit; do
    echo "Processing: $fruit"
done

# Test for loop in pipeline  
echo "1 2 3" | for i in $(cat); do
    echo "Number: $i"
done

# Test if statement in pipeline
echo "test" | if grep -q "test"; then
    echo "Found test in input"
else
    echo "No test found"
fi

# Test case statement in pipeline
echo "hello" | case "$(cat)" in
    hello)
        echo "Greeting detected"
        ;;
    goodbye)
        echo "Farewell detected"
        ;;
    *)
        echo "Unknown message"
        ;;
esac

# Test complex pipeline with multiple control structures
echo -e "1\n2\n3\n4\n5" | while read num; do
    if [ "$((num % 2))" = "0" ]; then
        echo "Even: $num"
    else
        echo "Odd: $num"
    fi
done | while read result; do
    echo "Result: $result"
done