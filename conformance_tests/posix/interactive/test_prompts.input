# Test prompt customization functionality
# PSH supports PS1/PS2 customization with escape sequences (v0.26.0 feature)

echo "Testing prompt customization:"

# Save original prompts
original_ps1="$PS1"
original_ps2="$PS2"

# Test basic PS1 setting
echo "Testing basic PS1:"
PS1="simple> "
echo "PS1 set to: $PS1"

# Test PS1 with escape sequences
echo "Testing PS1 escape sequences:"
PS1="\\u@\\h:\\w\\$ "
echo "PS1 with user@host: $PS1"

# Test individual escape sequences
echo "Testing individual escape sequences:"

# Username
PS1="\\u> "
echo "Username prompt: $PS1"

# Hostname  
PS1="\\h> "
echo "Hostname prompt: $PS1"

# Current directory
PS1="\\w> "
echo "Directory prompt: $PS1"

# Current directory basename
PS1="\\W> "
echo "Directory basename prompt: $PS1"

# Dollar/hash (user indicator)
PS1="\\$ "
echo "User indicator prompt: $PS1"

# Test time-based escape sequences
echo "Testing time escape sequences:"
PS1="\\t> "
echo "Time prompt: $PS1"

PS1="\\T> "
echo "12-hour time prompt: $PS1"

PS1="\\d> "
echo "Date prompt: $PS1"

# Test PS2 (continuation prompt)
echo "Testing PS2 continuation prompt:"
PS2="> "
echo "PS2 set to: $PS2"

PS2="... "
echo "PS2 with dots: $PS2"

PS2="\\u> "
echo "PS2 with username: $PS2"

# Test prompt with ANSI colors (basic)
echo "Testing prompts with ANSI colors:"
PS1="\\[\\033[31m\\]red\\[\\033[0m\\]> "
echo "Red prompt set: $PS1"

PS1="\\[\\033[32m\\]\\u@\\h\\[\\033[0m\\]:\\w\\$ "
echo "Green user@host prompt: $PS1"

# Test complex prompt combinations
echo "Testing complex prompt combinations:"
PS1="[\\u@\\h \\W]\\$ "
echo "Bash-style prompt: $PS1"

PS1="\\d \\t \\u@\\h:\\w\\$ "
echo "Full info prompt: $PS1"

# Test prompt variable expansion
echo "Testing prompt variable expansion:"
CUSTOM_VAR="custom"
PS1="$CUSTOM_VAR> "
echo "Variable in prompt: $PS1"

# Test prompt with command substitution
echo "Testing prompt with command substitution:"
PS1="$(echo computed)> "
echo "Command substitution prompt: $PS1"

# Test prompt length handling
echo "Testing prompt length handling:"
PS1="very_long_prompt_string_that_might_wrap> "
echo "Long prompt: $PS1"

# Test empty prompts
echo "Testing empty prompts:"
PS1=""
echo "Empty PS1: '$PS1'"

PS2=""
echo "Empty PS2: '$PS2'"

# Test special characters in prompts
echo "Testing special characters in prompts:"
PS1="[*]> "
echo "Glob char prompt: $PS1"

PS1="(test)> "
echo "Parentheses prompt: $PS1"

PS1="{shell}> "
echo "Braces prompt: $PS1"

# Test escape sequence combinations
echo "Testing escape sequence combinations:"
PS1="\\u on \\h in \\w at \\t\\$ "
echo "Combined escapes: $PS1"

# Test invalid escape sequences
echo "Testing invalid escape sequences:"
PS1="\\z\\q\\x> "
echo "Invalid escapes: $PS1"

# Test prompt with backslashes
echo "Testing prompts with backslashes:"
PS1="\\\\> "
echo "Literal backslash prompt: $PS1"

# Test prompt inheritance
echo "Testing prompt inheritance:"
export PS1="exported> "
echo "Exported PS1: $PS1"

# Test prompt in different contexts
echo "Testing prompts in different contexts:"

# In command substitution
result=$(echo "Current PS1: $PS1")
echo "$result"

# In conditionals
if [ -n "$PS1" ]; then
    echo "PS1 is set: $PS1"
fi

# Test prompt restoration
echo "Testing prompt restoration:"
PS1="$original_ps1"
PS2="$original_ps2"
echo "Prompts restored"
echo "PS1: $PS1"
echo "PS2: $PS2"

echo "Prompt customization test completed"