# Test script argument handling and positional parameters
# PSH supports full POSIX positional parameter functionality

echo "Testing script argument handling:"

# Create test script that uses various positional parameters
mkdir -p tmp/args_test

cat > tmp/args_test/args_demo.sh << 'EOF'
#!/bin/sh
echo "Script name: $0"
echo "Total arguments: $#"
echo "All arguments: $*"
echo "All arguments (quoted): $@"
echo "First argument: $1"
echo "Second argument: $2"
echo "Third argument: $3"
echo "Fourth argument: $4"
echo "Fifth argument: $5"
echo "Tenth argument: ${10}"
echo "Fifteenth argument: ${15}"

# Test $@ vs $* behavior
echo "Testing \$@ vs \$*:"
set -- "arg with spaces" "another arg" "third"
echo "Using \$*: $*"
echo "Using \$@: $@"

# Demonstrate iterating over arguments
echo "Iterating over arguments with \$@:"
for arg in "$@"; do
    echo "  Arg: [$arg]"
done

echo "Iterating over arguments with \$*:"
for arg in "$*"; do
    echo "  Word: [$arg]"
done
EOF
chmod +x tmp/args_test/args_demo.sh

# Test with various argument patterns
echo "Testing with simple arguments:"
tmp/args_test/args_demo.sh one two three four five

echo ""
echo "Testing with spaces and special characters:"
tmp/args_test/args_demo.sh "arg with spaces" 'single quoted' "double quoted" "*glob*" '$var'

echo ""
echo "Testing with many arguments:"
tmp/args_test/args_demo.sh a b c d e f g h i j k l m n o p

# Test $0 variations
echo "Testing \$0 variations:"
cat > tmp/args_test/name_test.sh << 'EOF'
#!/bin/sh
echo "Script \$0: $0"
echo "Basename: $(basename "$0")"
echo "Dirname: $(dirname "$0")"
EOF
chmod +x tmp/args_test/name_test.sh

# Execute with different paths
echo "Direct execution:"
tmp/args_test/name_test.sh

echo "Relative path execution:"
cd tmp/args_test && ./name_test.sh && cd ../..

echo "Absolute path execution:"
$(pwd)/tmp/args_test/name_test.sh

# Test shift builtin
echo "Testing shift builtin:"
cat > tmp/args_test/shift_test.sh << 'EOF'
#!/bin/sh
echo "Before shift: \$# = $#, \$1 = $1, \$2 = $2, \$3 = $3"
shift
echo "After shift 1: \$# = $#, \$1 = $1, \$2 = $2, \$3 = $3"
shift 2
echo "After shift 2: \$# = $#, \$1 = $1, \$2 = $2, \$3 = $3"
EOF
chmod +x tmp/args_test/shift_test.sh

tmp/args_test/shift_test.sh first second third fourth fifth

# Test set builtin for changing positional parameters
echo "Testing set builtin:"
cat > tmp/args_test/set_test.sh << 'EOF'
#!/bin/sh
echo "Original args: $*"
set -- new_arg1 new_arg2 new_arg3
echo "After set: $*"
echo "Arg count: $#"
echo "First: $1, Second: $2, Third: $3"

# Test set with no arguments
set --
echo "After set --: $# arguments"
EOF
chmod +x tmp/args_test/set_test.sh

tmp/args_test/set_test.sh original args here

# Test argument validation and error handling
echo "Testing argument validation:"
cat > tmp/args_test/validation.sh << 'EOF'
#!/bin/sh
if [ $# -lt 2 ]; then
    echo "Error: At least 2 arguments required"
    echo "Usage: $0 <arg1> <arg2> [optional_args...]"
    exit 1
fi

echo "Valid arguments provided:"
echo "Required arg1: $1"
echo "Required arg2: $2"
echo "Optional args: ${@:3}"
EOF
chmod +x tmp/args_test/validation.sh

echo "With insufficient arguments:"
tmp/args_test/validation.sh one
echo "Exit code: $?"

echo "With sufficient arguments:"
tmp/args_test/validation.sh required1 required2 optional1 optional2
echo "Exit code: $?"

# Test special cases with arguments
echo "Testing special argument cases:"
cat > tmp/args_test/special.sh << 'EOF'
#!/bin/sh
echo "Empty argument test:"
echo "Arg count: $#"
echo "Args: [$1] [$2] [$3]"

# Test accessing undefined arguments
echo "Undefined arguments:"
echo "Arg 10: [${10}]"
echo "Arg 99: [${99}]"
EOF
chmod +x tmp/args_test/special.sh

echo "With empty arguments:"
tmp/args_test/special.sh "" "middle" ""

echo "With no arguments:"
tmp/args_test/special.sh

# Test arguments with shell metacharacters
echo "Testing metacharacter arguments:"
cat > tmp/args_test/meta.sh << 'EOF'
#!/bin/sh
echo "Metacharacter test:"
echo "Arg 1: [$1]"
echo "Arg 2: [$2]"
echo "Arg 3: [$3]"
echo "All args: $*"
EOF
chmod +x tmp/args_test/meta.sh

tmp/args_test/meta.sh '$(echo injection)' '`date`' '$HOME' '*.txt' '|pipe|' '&&and&&'

# Cleanup
rm -rf tmp/args_test

echo "Script arguments test completed"