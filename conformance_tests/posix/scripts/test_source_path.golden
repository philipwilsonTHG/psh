Testing source command and PATH resolution:
Testing basic source command:
After sourcing functions.sh:
SOURCED_VAR: value from sourced script
COUNTER: 42
Hello from sourced function: world
5 + 3 = 8
Testing dot (.) command:
After sourcing config.sh:
Host: localhost
Port: 8080
Debug: true
Testing relative path sourcing:
Sourced from relative path - COUNTER: 42
Testing source with arguments:
Sourced script received arguments:
Script name: psh
Argument count: 0
Arguments:
First arg:
Second arg:
MESSAGE set by sourced script: No configuration provided
Testing nested sourcing:
In nested1.sh
Back in nested1.sh, NESTED2_VAR:
In nested2.sh
nested1 variable: from nested1
Testing PATH-based script execution:
Script executed from PATH
Script location: psh
Arguments:
Executing script via PATH:
Testing which command:
Testing command -v:
testcmd from tmp/source_test/bin
testcmd from tmp/source_test/bin2
Testing PATH precedence:
Testing source return values:
Script with return value
Returning success
Source return code (success): 1
Source return code (failure): 1
Testing source error handling:
Source nonexistent file exit code: 1
Testing source with special filenames:
Sourced file with spaces in name
SPACED_VAR: success
Testing environment inheritance:
Parent variable in sourced script: from parent
Child variable in parent: from child
Exported variable in parent: exported from sourced script
Testing source in subshell:
In subshell - SOURCED_VAR: value from sourced script
Hello from sourced function: subshell
After subshell - SOURCED_VAR still available: value from sourced script
Source and PATH test completed
